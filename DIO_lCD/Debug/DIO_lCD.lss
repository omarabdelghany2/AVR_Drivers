
DIO_lCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000492  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000492  00000526  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800068  00800068  0000052e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000052e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000560  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  0000059c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000135b  00000000  00000000  00000674  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000084d  00000000  00000000  000019cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000080d  00000000  00000000  0000221c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000198  00000000  00000000  00002a2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056e  00000000  00000000  00002bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a71  00000000  00000000  00003132  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003ba3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e9       	ldi	r30, 0x92	; 146
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a9 36       	cpi	r26, 0x69	; 105
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ac 01 	call	0x358	; 0x358 <main>
  8a:	0c 94 47 02 	jmp	0x48e	; 0x48e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LCD_lab>:
 */ 
#include "../HAL/LCD/LCD.h"

#include "avr/delay.h"
void LCD_lab()
{
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	28 97       	sbiw	r28, 0x08	; 8
  9c:	0f b6       	in	r0, 0x3f	; 63
  9e:	f8 94       	cli
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	cd bf       	out	0x3d, r28	; 61
	LCD_Intialize();
  a6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_Intialize>
	uint8 pattern []={0x0E,0x08,0x1E,0x00,0x04,0x04,0x04,0x04};
  aa:	88 e0       	ldi	r24, 0x08	; 8
  ac:	e0 e6       	ldi	r30, 0x60	; 96
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	de 01       	movw	r26, r28
  b2:	11 96       	adiw	r26, 0x01	; 1
  b4:	01 90       	ld	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	8a 95       	dec	r24
  ba:	e1 f7       	brne	.-8      	; 0xb4 <LCD_lab+0x22>

	LCD_StoreCustomChr(pattern,0);
  bc:	60 e0       	ldi	r22, 0x00	; 0
  be:	ce 01       	movw	r24, r28
  c0:	01 96       	adiw	r24, 0x01	; 1
  c2:	0e 94 82 01 	call	0x304	; 0x304 <LCD_StoreCustomChr>
	LCD_DisplayCustomchr(0,0,0);
  c6:	40 e0       	ldi	r20, 0x00	; 0
  c8:	60 e0       	ldi	r22, 0x00	; 0
  ca:	80 e0       	ldi	r24, 0x00	; 0
  cc:	0e 94 a1 01 	call	0x342	; 0x342 <LCD_DisplayCustomchr>
  d0:	ff cf       	rjmp	.-2      	; 0xd0 <LCD_lab+0x3e>

000000d2 <LCD_WriteCmd>:
		{
			LCD_WriteData(Str[Index]);
			Index++;
		}
	}
}
  d2:	cf 93       	push	r28
  d4:	c8 2f       	mov	r28, r24
  d6:	40 e0       	ldi	r20, 0x00	; 0
  d8:	61 e0       	ldi	r22, 0x01	; 1
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
  e0:	40 e0       	ldi	r20, 0x00	; 0
  e2:	62 e0       	ldi	r22, 0x02	; 2
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
  ea:	c4 fb       	bst	r28, 4
  ec:	44 27       	eor	r20, r20
  ee:	40 f9       	bld	r20, 0
  f0:	64 e0       	ldi	r22, 0x04	; 4
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
  f8:	c5 fb       	bst	r28, 5
  fa:	44 27       	eor	r20, r20
  fc:	40 f9       	bld	r20, 0
  fe:	65 e0       	ldi	r22, 0x05	; 5
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 106:	c6 fb       	bst	r28, 6
 108:	44 27       	eor	r20, r20
 10a:	40 f9       	bld	r20, 0
 10c:	66 e0       	ldi	r22, 0x06	; 6
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 114:	4c 2f       	mov	r20, r28
 116:	44 1f       	adc	r20, r20
 118:	44 27       	eor	r20, r20
 11a:	44 1f       	adc	r20, r20
 11c:	67 e0       	ldi	r22, 0x07	; 7
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 124:	41 e0       	ldi	r20, 0x01	; 1
 126:	63 e0       	ldi	r22, 0x03	; 3
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 12e:	83 ec       	ldi	r24, 0xC3	; 195
 130:	99 e0       	ldi	r25, 0x09	; 9
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <LCD_WriteCmd+0x60>
 136:	00 c0       	rjmp	.+0      	; 0x138 <LCD_WriteCmd+0x66>
 138:	00 00       	nop
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	63 e0       	ldi	r22, 0x03	; 3
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 144:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end>
 148:	88 23       	and	r24, r24
 14a:	59 f1       	breq	.+86     	; 0x1a2 <LCD_WriteCmd+0xd0>
 14c:	4c 2f       	mov	r20, r28
 14e:	41 70       	andi	r20, 0x01	; 1
 150:	64 e0       	ldi	r22, 0x04	; 4
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 158:	c1 fb       	bst	r28, 1
 15a:	44 27       	eor	r20, r20
 15c:	40 f9       	bld	r20, 0
 15e:	65 e0       	ldi	r22, 0x05	; 5
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 166:	c2 fb       	bst	r28, 2
 168:	44 27       	eor	r20, r20
 16a:	40 f9       	bld	r20, 0
 16c:	66 e0       	ldi	r22, 0x06	; 6
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 174:	c3 fb       	bst	r28, 3
 176:	44 27       	eor	r20, r20
 178:	40 f9       	bld	r20, 0
 17a:	67 e0       	ldi	r22, 0x07	; 7
 17c:	80 e0       	ldi	r24, 0x00	; 0
 17e:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 182:	41 e0       	ldi	r20, 0x01	; 1
 184:	63 e0       	ldi	r22, 0x03	; 3
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 18c:	83 ec       	ldi	r24, 0xC3	; 195
 18e:	99 e0       	ldi	r25, 0x09	; 9
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <LCD_WriteCmd+0xbe>
 194:	00 c0       	rjmp	.+0      	; 0x196 <LCD_WriteCmd+0xc4>
 196:	00 00       	nop
 198:	40 e0       	ldi	r20, 0x00	; 0
 19a:	63 e0       	ldi	r22, 0x03	; 3
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 1a2:	cf 91       	pop	r28
 1a4:	08 95       	ret

000001a6 <LCD_Intialize>:
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	0e 94 af 01 	call	0x35e	; 0x35e <DIO_SetPortDirection>
 1ae:	61 e0       	ldi	r22, 0x01	; 1
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	0e 94 af 01 	call	0x35e	; 0x35e <DIO_SetPortDirection>
 1b6:	2f e5       	ldi	r18, 0x5F	; 95
 1b8:	8a ee       	ldi	r24, 0xEA	; 234
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	80 40       	sbci	r24, 0x00	; 0
 1c0:	90 40       	sbci	r25, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <LCD_Intialize+0x16>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <LCD_Intialize+0x20>
 1c6:	00 00       	nop
 1c8:	80 e2       	ldi	r24, 0x20	; 32
 1ca:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
 1ce:	80 e2       	ldi	r24, 0x20	; 32
 1d0:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
 1d4:	80 e8       	ldi	r24, 0x80	; 128
 1d6:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
 1da:	83 ec       	ldi	r24, 0xC3	; 195
 1dc:	99 e0       	ldi	r25, 0x09	; 9
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <LCD_Intialize+0x38>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <LCD_Intialize+0x3e>
 1e4:	00 00       	nop
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
 1ec:	80 ef       	ldi	r24, 0xF0	; 240
 1ee:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
 1f2:	83 ec       	ldi	r24, 0xC3	; 195
 1f4:	99 e0       	ldi	r25, 0x09	; 9
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <LCD_Intialize+0x50>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <LCD_Intialize+0x56>
 1fc:	00 00       	nop
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
 204:	80 e1       	ldi	r24, 0x10	; 16
 206:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
 20a:	87 e8       	ldi	r24, 0x87	; 135
 20c:	93 e1       	ldi	r25, 0x13	; 19
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <LCD_Intialize+0x68>
 212:	00 c0       	rjmp	.+0      	; 0x214 <LCD_Intialize+0x6e>
 214:	00 00       	nop
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__data_end>
 21c:	08 95       	ret

0000021e <LCD_WriteData>:
 21e:	cf 93       	push	r28
 220:	c8 2f       	mov	r28, r24
 222:	41 e0       	ldi	r20, 0x01	; 1
 224:	61 e0       	ldi	r22, 0x01	; 1
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 22c:	40 e0       	ldi	r20, 0x00	; 0
 22e:	62 e0       	ldi	r22, 0x02	; 2
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 236:	c4 fb       	bst	r28, 4
 238:	44 27       	eor	r20, r20
 23a:	40 f9       	bld	r20, 0
 23c:	64 e0       	ldi	r22, 0x04	; 4
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 244:	c5 fb       	bst	r28, 5
 246:	44 27       	eor	r20, r20
 248:	40 f9       	bld	r20, 0
 24a:	65 e0       	ldi	r22, 0x05	; 5
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 252:	c6 fb       	bst	r28, 6
 254:	44 27       	eor	r20, r20
 256:	40 f9       	bld	r20, 0
 258:	66 e0       	ldi	r22, 0x06	; 6
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 260:	4c 2f       	mov	r20, r28
 262:	44 1f       	adc	r20, r20
 264:	44 27       	eor	r20, r20
 266:	44 1f       	adc	r20, r20
 268:	67 e0       	ldi	r22, 0x07	; 7
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 270:	41 e0       	ldi	r20, 0x01	; 1
 272:	63 e0       	ldi	r22, 0x03	; 3
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 27a:	83 ec       	ldi	r24, 0xC3	; 195
 27c:	99 e0       	ldi	r25, 0x09	; 9
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <LCD_WriteData+0x60>
 282:	00 c0       	rjmp	.+0      	; 0x284 <LCD_WriteData+0x66>
 284:	00 00       	nop
 286:	40 e0       	ldi	r20, 0x00	; 0
 288:	63 e0       	ldi	r22, 0x03	; 3
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 290:	4c 2f       	mov	r20, r28
 292:	41 70       	andi	r20, 0x01	; 1
 294:	64 e0       	ldi	r22, 0x04	; 4
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 29c:	c1 fb       	bst	r28, 1
 29e:	44 27       	eor	r20, r20
 2a0:	40 f9       	bld	r20, 0
 2a2:	65 e0       	ldi	r22, 0x05	; 5
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 2aa:	c2 fb       	bst	r28, 2
 2ac:	44 27       	eor	r20, r20
 2ae:	40 f9       	bld	r20, 0
 2b0:	66 e0       	ldi	r22, 0x06	; 6
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 2b8:	c3 fb       	bst	r28, 3
 2ba:	44 27       	eor	r20, r20
 2bc:	40 f9       	bld	r20, 0
 2be:	67 e0       	ldi	r22, 0x07	; 7
 2c0:	80 e0       	ldi	r24, 0x00	; 0
 2c2:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 2c6:	41 e0       	ldi	r20, 0x01	; 1
 2c8:	63 e0       	ldi	r22, 0x03	; 3
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 2d0:	83 ec       	ldi	r24, 0xC3	; 195
 2d2:	99 e0       	ldi	r25, 0x09	; 9
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <LCD_WriteData+0xb6>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <LCD_WriteData+0xbc>
 2da:	00 00       	nop
 2dc:	40 e0       	ldi	r20, 0x00	; 0
 2de:	63 e0       	ldi	r22, 0x03	; 3
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	0e 94 d7 01 	call	0x3ae	; 0x3ae <DIO_SetPinValue>
 2e6:	cf 91       	pop	r28
 2e8:	08 95       	ret

000002ea <LCD_GoToPos>:
 2ea:	82 30       	cpi	r24, 0x02	; 2
 2ec:	50 f4       	brcc	.+20     	; 0x302 <LCD_GoToPos+0x18>
 2ee:	60 31       	cpi	r22, 0x10	; 16
 2f0:	40 f4       	brcc	.+16     	; 0x302 <LCD_GoToPos+0x18>
 2f2:	90 e4       	ldi	r25, 0x40	; 64
 2f4:	89 9f       	mul	r24, r25
 2f6:	60 0d       	add	r22, r0
 2f8:	11 24       	eor	r1, r1
 2fa:	86 2f       	mov	r24, r22
 2fc:	80 68       	ori	r24, 0x80	; 128
 2fe:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
 302:	08 95       	ret

00000304 <LCD_StoreCustomChr>:

void LCD_StoreCustomChr(uint8*pattern , uint8 CGRAM_Index)
{
 304:	0f 93       	push	r16
 306:	1f 93       	push	r17
 308:	cf 93       	push	r28
 30a:	8c 01       	movw	r16, r24
	uint8 address;//address of CGRAM to store the character
	if(CGRAM_Index<8)
 30c:	68 30       	cpi	r22, 0x08	; 8
 30e:	90 f4       	brcc	.+36     	; 0x334 <LCD_StoreCustomChr+0x30>
	{
	
	address=CGRAM_Index*8;//every idex occupy 8 places 
 310:	86 2f       	mov	r24, r22
 312:	88 0f       	add	r24, r24
 314:	88 0f       	add	r24, r24
 316:	88 0f       	add	r24, r24
	address=SetBIT(address,6);//set bit no 6 to tell LCD to go to CGRAM not DDRAM
	LCD_WriteCmd(address);//Tell LCD
 318:	80 64       	ori	r24, 0x40	; 64
 31a:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
		for(uint8 index=0;index<8;index++)//store the character
 31e:	c0 e0       	ldi	r28, 0x00	; 0
 320:	07 c0       	rjmp	.+14     	; 0x330 <LCD_StoreCustomChr+0x2c>
		{
		LCD_WriteData(pattern[index]);
 322:	f8 01       	movw	r30, r16
 324:	ec 0f       	add	r30, r28
 326:	f1 1d       	adc	r31, r1
 328:	80 81       	ld	r24, Z
 32a:	0e 94 0f 01 	call	0x21e	; 0x21e <LCD_WriteData>
	{
	
	address=CGRAM_Index*8;//every idex occupy 8 places 
	address=SetBIT(address,6);//set bit no 6 to tell LCD to go to CGRAM not DDRAM
	LCD_WriteCmd(address);//Tell LCD
		for(uint8 index=0;index<8;index++)//store the character
 32e:	cf 5f       	subi	r28, 0xFF	; 255
 330:	c8 30       	cpi	r28, 0x08	; 8
 332:	b8 f3       	brcs	.-18     	; 0x322 <LCD_StoreCustomChr+0x1e>
		{
		LCD_WriteData(pattern[index]);
		}
	}
	LCD_WriteCmd(0x02);//return home command toDDRAM 
 334:	82 e0       	ldi	r24, 0x02	; 2
 336:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_WriteCmd>
	
}
 33a:	cf 91       	pop	r28
 33c:	1f 91       	pop	r17
 33e:	0f 91       	pop	r16
 340:	08 95       	ret

00000342 <LCD_DisplayCustomchr>:
void LCD_DisplayCustomchr(uint8 CGRAM_Index,uint8 ROW,uint8 Column)
{
 342:	cf 93       	push	r28
 344:	c8 2f       	mov	r28, r24
 346:	86 2f       	mov	r24, r22
	LCD_GoToPos(ROW,Column);
 348:	64 2f       	mov	r22, r20
 34a:	0e 94 75 01 	call	0x2ea	; 0x2ea <LCD_GoToPos>
	LCD_WriteData(CGRAM_Index);
 34e:	8c 2f       	mov	r24, r28
 350:	0e 94 0f 01 	call	0x21e	; 0x21e <LCD_WriteData>
 354:	cf 91       	pop	r28
 356:	08 95       	ret

00000358 <main>:
#include "MCAL/DIO/DIO.h"
#include "APP/Seven_Segment.h"
#include "HAL/LCD/lCD.h"
int main()
{
	LCD_lab();
 358:	0e 94 49 00 	call	0x92	; 0x92 <LCD_lab>
 35c:	ff cf       	rjmp	.-2      	; 0x35c <main+0x4>

0000035e <DIO_SetPortDirection>:
		switch(Port_ID)
		{
				case(PORTA):SetBIT(DDRA_Reg,Pin_ID);break;
				case(PORTB):SetBIT(DDRB_Reg,Pin_ID);break;
				case(PORTC):SetBIT(DDRC_Reg,Pin_ID);break;
				case(PORTD):SetBIT(DDRD_Reg,Pin_ID);break;
 35e:	61 30       	cpi	r22, 0x01	; 1
 360:	a1 f4       	brne	.+40     	; 0x38a <DIO_SetPortDirection+0x2c>
 362:	81 30       	cpi	r24, 0x01	; 1
 364:	49 f0       	breq	.+18     	; 0x378 <DIO_SetPortDirection+0x1a>
 366:	28 f0       	brcs	.+10     	; 0x372 <DIO_SetPortDirection+0x14>
 368:	82 30       	cpi	r24, 0x02	; 2
 36a:	49 f0       	breq	.+18     	; 0x37e <DIO_SetPortDirection+0x20>
 36c:	83 30       	cpi	r24, 0x03	; 3
 36e:	51 f0       	breq	.+20     	; 0x384 <DIO_SetPortDirection+0x26>
 370:	08 95       	ret
 372:	8f ef       	ldi	r24, 0xFF	; 255
 374:	8a bb       	out	0x1a, r24	; 26
 376:	08 95       	ret
 378:	8f ef       	ldi	r24, 0xFF	; 255
 37a:	87 bb       	out	0x17, r24	; 23
 37c:	08 95       	ret
 37e:	8f ef       	ldi	r24, 0xFF	; 255
 380:	84 bb       	out	0x14, r24	; 20
 382:	08 95       	ret
 384:	8f ef       	ldi	r24, 0xFF	; 255
 386:	81 bb       	out	0x11, r24	; 17
 388:	08 95       	ret
 38a:	61 11       	cpse	r22, r1
 38c:	0f c0       	rjmp	.+30     	; 0x3ac <DIO_SetPortDirection+0x4e>
 38e:	81 30       	cpi	r24, 0x01	; 1
 390:	41 f0       	breq	.+16     	; 0x3a2 <DIO_SetPortDirection+0x44>
 392:	28 f0       	brcs	.+10     	; 0x39e <DIO_SetPortDirection+0x40>
 394:	82 30       	cpi	r24, 0x02	; 2
 396:	39 f0       	breq	.+14     	; 0x3a6 <DIO_SetPortDirection+0x48>
 398:	83 30       	cpi	r24, 0x03	; 3
 39a:	39 f0       	breq	.+14     	; 0x3aa <DIO_SetPortDirection+0x4c>
 39c:	08 95       	ret
 39e:	1a ba       	out	0x1a, r1	; 26
 3a0:	08 95       	ret
 3a2:	17 ba       	out	0x17, r1	; 23
 3a4:	08 95       	ret
 3a6:	14 ba       	out	0x14, r1	; 20
 3a8:	08 95       	ret
 3aa:	11 ba       	out	0x11, r1	; 17
 3ac:	08 95       	ret

000003ae <DIO_SetPinValue>:
		}
	}
}
void DIO_SetPinValue(DIO_Port_ID Port_ID,DIO_PIN_ID Pin_ID, STD_Value Value)
{
	if(Value==HIGH)
 3ae:	41 30       	cpi	r20, 0x01	; 1
 3b0:	a1 f5       	brne	.+104    	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
	{
		switch(Port_ID)
 3b2:	81 30       	cpi	r24, 0x01	; 1
 3b4:	89 f0       	breq	.+34     	; 0x3d8 <DIO_SetPinValue+0x2a>
 3b6:	28 f0       	brcs	.+10     	; 0x3c2 <DIO_SetPinValue+0x14>
 3b8:	82 30       	cpi	r24, 0x02	; 2
 3ba:	c9 f0       	breq	.+50     	; 0x3ee <DIO_SetPinValue+0x40>
 3bc:	83 30       	cpi	r24, 0x03	; 3
 3be:	11 f1       	breq	.+68     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3c0:	08 95       	ret
		{
			case(PORTA): SetBIT(PORTA_Reg,Pin_ID);break;
 3c2:	2b b3       	in	r18, 0x1b	; 27
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <DIO_SetPinValue+0x20>
 3ca:	88 0f       	add	r24, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	6a 95       	dec	r22
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <DIO_SetPinValue+0x1c>
 3d2:	82 2b       	or	r24, r18
 3d4:	8b bb       	out	0x1b, r24	; 27
 3d6:	08 95       	ret
			case(PORTB): SetBIT(PORTB_Reg,Pin_ID);break;
 3d8:	28 b3       	in	r18, 0x18	; 24
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	02 c0       	rjmp	.+4      	; 0x3e4 <DIO_SetPinValue+0x36>
 3e0:	88 0f       	add	r24, r24
 3e2:	99 1f       	adc	r25, r25
 3e4:	6a 95       	dec	r22
 3e6:	e2 f7       	brpl	.-8      	; 0x3e0 <DIO_SetPinValue+0x32>
 3e8:	82 2b       	or	r24, r18
 3ea:	88 bb       	out	0x18, r24	; 24
 3ec:	08 95       	ret
			case(PORTC): SetBIT(PORTC_Reg,Pin_ID);break;
 3ee:	25 b3       	in	r18, 0x15	; 21
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <DIO_SetPinValue+0x4c>
 3f6:	88 0f       	add	r24, r24
 3f8:	99 1f       	adc	r25, r25
 3fa:	6a 95       	dec	r22
 3fc:	e2 f7       	brpl	.-8      	; 0x3f6 <DIO_SetPinValue+0x48>
 3fe:	82 2b       	or	r24, r18
 400:	85 bb       	out	0x15, r24	; 21
 402:	08 95       	ret
			case(PORTD): SetBIT(PORTD_Reg,Pin_ID);break;
 404:	22 b3       	in	r18, 0x12	; 18
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40c:	88 0f       	add	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	6a 95       	dec	r22
 412:	e2 f7       	brpl	.-8      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 414:	82 2b       	or	r24, r18
 416:	82 bb       	out	0x12, r24	; 18
 418:	08 95       	ret
			
		}
		
	}
	else if(Value==LOW)
 41a:	41 11       	cpse	r20, r1
 41c:	37 c0       	rjmp	.+110    	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
	{
			switch(Port_ID)
 41e:	81 30       	cpi	r24, 0x01	; 1
 420:	91 f0       	breq	.+36     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 422:	28 f0       	brcs	.+10     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 424:	82 30       	cpi	r24, 0x02	; 2
 426:	d9 f0       	breq	.+54     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 428:	83 30       	cpi	r24, 0x03	; 3
 42a:	29 f1       	breq	.+74     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 42c:	08 95       	ret
			{
				case(PORTA): ClearBIT(PORTA_Reg,Pin_ID);break;
 42e:	2b b3       	in	r18, 0x1b	; 27
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	02 c0       	rjmp	.+4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 436:	88 0f       	add	r24, r24
 438:	99 1f       	adc	r25, r25
 43a:	6a 95       	dec	r22
 43c:	e2 f7       	brpl	.-8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 43e:	80 95       	com	r24
 440:	82 23       	and	r24, r18
 442:	8b bb       	out	0x1b, r24	; 27
 444:	08 95       	ret
				case(PORTB): ClearBIT(PORTB_Reg,Pin_ID);break;
 446:	28 b3       	in	r18, 0x18	; 24
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	02 c0       	rjmp	.+4      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 44e:	88 0f       	add	r24, r24
 450:	99 1f       	adc	r25, r25
 452:	6a 95       	dec	r22
 454:	e2 f7       	brpl	.-8      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 456:	80 95       	com	r24
 458:	82 23       	and	r24, r18
 45a:	88 bb       	out	0x18, r24	; 24
 45c:	08 95       	ret
				case(PORTC): ClearBIT(PORTC_Reg,Pin_ID);break;
 45e:	25 b3       	in	r18, 0x15	; 21
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	02 c0       	rjmp	.+4      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 466:	88 0f       	add	r24, r24
 468:	99 1f       	adc	r25, r25
 46a:	6a 95       	dec	r22
 46c:	e2 f7       	brpl	.-8      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 46e:	80 95       	com	r24
 470:	82 23       	and	r24, r18
 472:	85 bb       	out	0x15, r24	; 21
 474:	08 95       	ret
				case(PORTD): ClearBIT(PORTD_Reg,Pin_ID);break;
 476:	22 b3       	in	r18, 0x12	; 18
 478:	81 e0       	ldi	r24, 0x01	; 1
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	02 c0       	rjmp	.+4      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 47e:	88 0f       	add	r24, r24
 480:	99 1f       	adc	r25, r25
 482:	6a 95       	dec	r22
 484:	e2 f7       	brpl	.-8      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 486:	80 95       	com	r24
 488:	82 23       	and	r24, r18
 48a:	82 bb       	out	0x12, r24	; 18
 48c:	08 95       	ret

0000048e <_exit>:
 48e:	f8 94       	cli

00000490 <__stop_program>:
 490:	ff cf       	rjmp	.-2      	; 0x490 <__stop_program>
