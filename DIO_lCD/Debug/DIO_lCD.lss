
DIO_lCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000043c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000004b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  0000051c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001272  00000000  00000000  000005d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000864  00000000  00000000  00001846  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007f6  00000000  00000000  000020aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  000028a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ad  00000000  00000000  000029b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000072d  00000000  00000000  00002e5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000358a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 81 01 	call	0x302	; 0x302 <main>
  74:	0c 94 1c 02 	jmp	0x438	; 0x438 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <LCD_lab>:
#include "../HAL/LCD/LCD.h"

#include "avr/delay.h"
void LCD_lab()
{
	LCD_Intialize();
  7c:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Intialize>
	while(1)
	{
		
	LCD_WriteData('M');
  80:	8d e4       	ldi	r24, 0x4D	; 77
  82:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('A');
  86:	81 e4       	ldi	r24, 0x41	; 65
  88:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('R');
  8c:	82 e5       	ldi	r24, 0x52	; 82
  8e:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('K');
  92:	8b e4       	ldi	r24, 0x4B	; 75
  94:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('I');
  98:	89 e4       	ldi	r24, 0x49	; 73
  9a:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('Z');
  9e:	8a e5       	ldi	r24, 0x5A	; 90
  a0:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('O');
  a4:	8f e4       	ldi	r24, 0x4F	; 79
  a6:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('0');
  aa:	80 e3       	ldi	r24, 0x30	; 48
  ac:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('.');
  b0:	8e e2       	ldi	r24, 0x2E	; 46
  b2:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('.');
  b6:	8e e2       	ldi	r24, 0x2E	; 46
  b8:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	LCD_WriteData('.');
  bc:	8e e2       	ldi	r24, 0x2E	; 46
  be:	0e 94 1b 01 	call	0x236	; 0x236 <LCD_WriteData>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	2f e7       	ldi	r18, 0x7F	; 127
  c4:	8a e1       	ldi	r24, 0x1A	; 26
  c6:	96 e0       	ldi	r25, 0x06	; 6
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	90 40       	sbci	r25, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <LCD_lab+0x4c>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <LCD_lab+0x56>
  d2:	00 00       	nop
	_delay_ms(2000);
	LCD_WriteCmd(0x01);	
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_WriteCmd>
  da:	d2 cf       	rjmp	.-92     	; 0x80 <LCD_lab+0x4>

000000dc <LCD_WriteCmd>:
	
	InitStepFinished=1;
	
}
 void LCD_WriteCmd(uint8 Cmd)
{
  dc:	cf 93       	push	r28
  de:	c8 2f       	mov	r28, r24
	DIO_SetPinValue(PORTB,PIN1,LOW);//RS and R/W should be low to write command
  e0:	40 e0       	ldi	r20, 0x00	; 0
  e2:	61 e0       	ldi	r22, 0x01	; 1
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	DIO_SetPinValue(PORTB,PIN2,LOW);
  ea:	40 e0       	ldi	r20, 0x00	; 0
  ec:	62 e0       	ldi	r22, 0x02	; 2
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	
	
	DIO_SetPinValue(PORTA,PIN4,GetBIT(Cmd,4));
  f4:	c4 fb       	bst	r28, 4
  f6:	44 27       	eor	r20, r20
  f8:	40 f9       	bld	r20, 0
  fa:	64 e0       	ldi	r22, 0x04	; 4
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	DIO_SetPinValue(PORTA,PIN5,GetBIT(Cmd,5));
 102:	c5 fb       	bst	r28, 5
 104:	44 27       	eor	r20, r20
 106:	40 f9       	bld	r20, 0
 108:	65 e0       	ldi	r22, 0x05	; 5
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	DIO_SetPinValue(PORTA,PIN6,GetBIT(Cmd,6));
 110:	c6 fb       	bst	r28, 6
 112:	44 27       	eor	r20, r20
 114:	40 f9       	bld	r20, 0
 116:	66 e0       	ldi	r22, 0x06	; 6
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	DIO_SetPinValue(PORTA,PIN7,GetBIT(Cmd,7));
 11e:	4c 2f       	mov	r20, r28
 120:	44 1f       	adc	r20, r20
 122:	44 27       	eor	r20, r20
 124:	44 1f       	adc	r20, r20
 126:	67 e0       	ldi	r22, 0x07	; 7
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	
	//delay and reading by down Edge
	
										//
	DIO_SetPinValue(PORTB,PIN3,HIGH);
 12e:	41 e0       	ldi	r20, 0x01	; 1
 130:	63 e0       	ldi	r22, 0x03	; 3
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
 138:	83 ec       	ldi	r24, 0xC3	; 195
 13a:	99 e0       	ldi	r25, 0x09	; 9
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <LCD_WriteCmd+0x60>
 140:	00 c0       	rjmp	.+0      	; 0x142 <LCD_WriteCmd+0x66>
 142:	00 00       	nop
	_delay_ms(1);                       //delay for reading block
	DIO_SetPinValue(PORTB,PIN3,LOW);
 144:	40 e0       	ldi	r20, 0x00	; 0
 146:	63 e0       	ldi	r22, 0x03	; 3
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	
										//
	if(InitStepFinished)
 14e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 152:	88 23       	and	r24, r24
 154:	59 f1       	breq	.+86     	; 0x1ac <LCD_WriteCmd+0xd0>
	{
										
	DIO_SetPinValue(PORTA,PIN4,GetBIT(Cmd,0));
 156:	4c 2f       	mov	r20, r28
 158:	41 70       	andi	r20, 0x01	; 1
 15a:	64 e0       	ldi	r22, 0x04	; 4
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	DIO_SetPinValue(PORTA,PIN5,GetBIT(Cmd,1));
 162:	c1 fb       	bst	r28, 1
 164:	44 27       	eor	r20, r20
 166:	40 f9       	bld	r20, 0
 168:	65 e0       	ldi	r22, 0x05	; 5
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	DIO_SetPinValue(PORTA,PIN6,GetBIT(Cmd,2));
 170:	c2 fb       	bst	r28, 2
 172:	44 27       	eor	r20, r20
 174:	40 f9       	bld	r20, 0
 176:	66 e0       	ldi	r22, 0x06	; 6
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	DIO_SetPinValue(PORTA,PIN7,GetBIT(Cmd,3));
 17e:	c3 fb       	bst	r28, 3
 180:	44 27       	eor	r20, r20
 182:	40 f9       	bld	r20, 0
 184:	67 e0       	ldi	r22, 0x07	; 7
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>

	//delay and reading by down Edge
	
	//
	DIO_SetPinValue(PORTB,PIN3,HIGH);
 18c:	41 e0       	ldi	r20, 0x01	; 1
 18e:	63 e0       	ldi	r22, 0x03	; 3
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
 196:	83 ec       	ldi	r24, 0xC3	; 195
 198:	99 e0       	ldi	r25, 0x09	; 9
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <LCD_WriteCmd+0xbe>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <LCD_WriteCmd+0xc4>
 1a0:	00 00       	nop
	_delay_ms(1);                       //delay for reading block
	DIO_SetPinValue(PORTB,PIN3,LOW);
 1a2:	40 e0       	ldi	r20, 0x00	; 0
 1a4:	63 e0       	ldi	r22, 0x03	; 3
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	
	//	
	}
										
										
}
 1ac:	cf 91       	pop	r28
 1ae:	08 95       	ret

000001b0 <LCD_Intialize>:


static uint8 InitStepFinished = 0;
void LCD_Intialize()
{
	DIO_SetPortDirection(PORTA,Output);
 1b0:	61 e0       	ldi	r22, 0x01	; 1
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	0e 94 84 01 	call	0x308	; 0x308 <DIO_SetPortDirection>
	DIO_SetPortDirection(PORTB,Output);
 1b8:	61 e0       	ldi	r22, 0x01	; 1
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	0e 94 84 01 	call	0x308	; 0x308 <DIO_SetPortDirection>
 1c0:	2f e5       	ldi	r18, 0x5F	; 95
 1c2:	8a ee       	ldi	r24, 0xEA	; 234
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	21 50       	subi	r18, 0x01	; 1
 1c8:	80 40       	sbci	r24, 0x00	; 0
 1ca:	90 40       	sbci	r25, 0x00	; 0
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <LCD_Intialize+0x16>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <LCD_Intialize+0x20>
 1d0:	00 00       	nop
	_delay_ms(30);
	LCD_WriteCmd(0x20);///intialize orders
 1d2:	80 e2       	ldi	r24, 0x20	; 32
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_WriteCmd>
	LCD_WriteCmd(0x20);
 1da:	80 e2       	ldi	r24, 0x20	; 32
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_WriteCmd>
	LCD_WriteCmd(0x80);
 1e2:	80 e8       	ldi	r24, 0x80	; 128
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_WriteCmd>
 1ea:	83 ec       	ldi	r24, 0xC3	; 195
 1ec:	99 e0       	ldi	r25, 0x09	; 9
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <LCD_Intialize+0x3e>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <LCD_Intialize+0x44>
 1f4:	00 00       	nop
	_delay_ms(1);
	LCD_WriteCmd(0x00);
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_WriteCmd>
	LCD_WriteCmd(0xf0);
 1fe:	80 ef       	ldi	r24, 0xF0	; 240
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_WriteCmd>
 206:	83 ec       	ldi	r24, 0xC3	; 195
 208:	99 e0       	ldi	r25, 0x09	; 9
 20a:	01 97       	sbiw	r24, 0x01	; 1
 20c:	f1 f7       	brne	.-4      	; 0x20a <LCD_Intialize+0x5a>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <LCD_Intialize+0x60>
 210:	00 00       	nop
	_delay_ms(1);
	LCD_WriteCmd(0x00);
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_WriteCmd>
	LCD_WriteCmd(0x10);
 21a:	80 e1       	ldi	r24, 0x10	; 16
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_WriteCmd>
 222:	87 e8       	ldi	r24, 0x87	; 135
 224:	93 e1       	ldi	r25, 0x13	; 19
 226:	01 97       	sbiw	r24, 0x01	; 1
 228:	f1 f7       	brne	.-4      	; 0x226 <LCD_Intialize+0x76>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <LCD_Intialize+0x7c>
 22c:	00 00       	nop
	_delay_ms(2);
	
	InitStepFinished=1;
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 234:	08 95       	ret

00000236 <LCD_WriteData>:
	}
										
										
}
void LCD_WriteData(uint8 Data)
{
 236:	cf 93       	push	r28
 238:	c8 2f       	mov	r28, r24
		DIO_SetPinValue(PORTB,PIN1,HIGH);//RS and R/W should be high and  low to write Data
 23a:	41 e0       	ldi	r20, 0x01	; 1
 23c:	61 e0       	ldi	r22, 0x01	; 1
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
		DIO_SetPinValue(PORTB,PIN2,LOW);
 244:	40 e0       	ldi	r20, 0x00	; 0
 246:	62 e0       	ldi	r22, 0x02	; 2
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	
	
		DIO_SetPinValue(PORTA,PIN4,GetBIT(Data,4));
 24e:	c4 fb       	bst	r28, 4
 250:	44 27       	eor	r20, r20
 252:	40 f9       	bld	r20, 0
 254:	64 e0       	ldi	r22, 0x04	; 4
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
		DIO_SetPinValue(PORTA,PIN5,GetBIT(Data,5));
 25c:	c5 fb       	bst	r28, 5
 25e:	44 27       	eor	r20, r20
 260:	40 f9       	bld	r20, 0
 262:	65 e0       	ldi	r22, 0x05	; 5
 264:	80 e0       	ldi	r24, 0x00	; 0
 266:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
		DIO_SetPinValue(PORTA,PIN6,GetBIT(Data,6));
 26a:	c6 fb       	bst	r28, 6
 26c:	44 27       	eor	r20, r20
 26e:	40 f9       	bld	r20, 0
 270:	66 e0       	ldi	r22, 0x06	; 6
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
		DIO_SetPinValue(PORTA,PIN7,GetBIT(Data,7));
 278:	4c 2f       	mov	r20, r28
 27a:	44 1f       	adc	r20, r20
 27c:	44 27       	eor	r20, r20
 27e:	44 1f       	adc	r20, r20
 280:	67 e0       	ldi	r22, 0x07	; 7
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	
							//delay and reading by down Edge
	
							//
							DIO_SetPinValue(PORTB,PIN3,HIGH);
 288:	41 e0       	ldi	r20, 0x01	; 1
 28a:	63 e0       	ldi	r22, 0x03	; 3
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
 292:	83 ec       	ldi	r24, 0xC3	; 195
 294:	99 e0       	ldi	r25, 0x09	; 9
 296:	01 97       	sbiw	r24, 0x01	; 1
 298:	f1 f7       	brne	.-4      	; 0x296 <LCD_WriteData+0x60>
 29a:	00 c0       	rjmp	.+0      	; 0x29c <LCD_WriteData+0x66>
 29c:	00 00       	nop
							_delay_ms(1);                       //delay for reading block
							DIO_SetPinValue(PORTB,PIN3,LOW);
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	63 e0       	ldi	r22, 0x03	; 3
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
	
							//
	
		
		DIO_SetPinValue(PORTA,PIN4,GetBIT(Data,0));
 2a8:	4c 2f       	mov	r20, r28
 2aa:	41 70       	andi	r20, 0x01	; 1
 2ac:	64 e0       	ldi	r22, 0x04	; 4
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
		DIO_SetPinValue(PORTA,PIN5,GetBIT(Data,1));
 2b4:	c1 fb       	bst	r28, 1
 2b6:	44 27       	eor	r20, r20
 2b8:	40 f9       	bld	r20, 0
 2ba:	65 e0       	ldi	r22, 0x05	; 5
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
		DIO_SetPinValue(PORTA,PIN6,GetBIT(Data,2));
 2c2:	c2 fb       	bst	r28, 2
 2c4:	44 27       	eor	r20, r20
 2c6:	40 f9       	bld	r20, 0
 2c8:	66 e0       	ldi	r22, 0x06	; 6
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
		DIO_SetPinValue(PORTA,PIN7,GetBIT(Data,3));
 2d0:	c3 fb       	bst	r28, 3
 2d2:	44 27       	eor	r20, r20
 2d4:	40 f9       	bld	r20, 0
 2d6:	67 e0       	ldi	r22, 0x07	; 7
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>

							//delay and reading by down Edge
		
							//
							DIO_SetPinValue(PORTB,PIN3,HIGH);
 2de:	41 e0       	ldi	r20, 0x01	; 1
 2e0:	63 e0       	ldi	r22, 0x03	; 3
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
 2e8:	83 ec       	ldi	r24, 0xC3	; 195
 2ea:	99 e0       	ldi	r25, 0x09	; 9
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <LCD_WriteData+0xb6>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <LCD_WriteData+0xbc>
 2f2:	00 00       	nop
							_delay_ms(1);                       //delay for reading block
							DIO_SetPinValue(PORTB,PIN3,LOW);
 2f4:	40 e0       	ldi	r20, 0x00	; 0
 2f6:	63 e0       	ldi	r22, 0x03	; 3
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_SetPinValue>
		
							//
	
	
	
 2fe:	cf 91       	pop	r28
 300:	08 95       	ret

00000302 <main>:
#include "MCAL/DIO/DIO.h"
#include "APP/Seven_Segment.h"
#include "HAL/LCD/lCD.h"
int main()
{
	LCD_lab();
 302:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_lab>
 306:	ff cf       	rjmp	.-2      	; 0x306 <main+0x4>

00000308 <DIO_SetPortDirection>:
		switch(Port_ID)
		{
				case(PORTA):SetBIT(DDRA_Reg,Pin_ID);break;
				case(PORTB):SetBIT(DDRB_Reg,Pin_ID);break;
				case(PORTC):SetBIT(DDRC_Reg,Pin_ID);break;
				case(PORTD):SetBIT(DDRD_Reg,Pin_ID);break;
 308:	61 30       	cpi	r22, 0x01	; 1
 30a:	a1 f4       	brne	.+40     	; 0x334 <DIO_SetPortDirection+0x2c>
 30c:	81 30       	cpi	r24, 0x01	; 1
 30e:	49 f0       	breq	.+18     	; 0x322 <DIO_SetPortDirection+0x1a>
 310:	28 f0       	brcs	.+10     	; 0x31c <DIO_SetPortDirection+0x14>
 312:	82 30       	cpi	r24, 0x02	; 2
 314:	49 f0       	breq	.+18     	; 0x328 <DIO_SetPortDirection+0x20>
 316:	83 30       	cpi	r24, 0x03	; 3
 318:	51 f0       	breq	.+20     	; 0x32e <DIO_SetPortDirection+0x26>
 31a:	08 95       	ret
 31c:	8f ef       	ldi	r24, 0xFF	; 255
 31e:	8a bb       	out	0x1a, r24	; 26
 320:	08 95       	ret
 322:	8f ef       	ldi	r24, 0xFF	; 255
 324:	87 bb       	out	0x17, r24	; 23
 326:	08 95       	ret
 328:	8f ef       	ldi	r24, 0xFF	; 255
 32a:	84 bb       	out	0x14, r24	; 20
 32c:	08 95       	ret
 32e:	8f ef       	ldi	r24, 0xFF	; 255
 330:	81 bb       	out	0x11, r24	; 17
 332:	08 95       	ret
 334:	61 11       	cpse	r22, r1
 336:	0f c0       	rjmp	.+30     	; 0x356 <DIO_SetPortDirection+0x4e>
 338:	81 30       	cpi	r24, 0x01	; 1
 33a:	41 f0       	breq	.+16     	; 0x34c <DIO_SetPortDirection+0x44>
 33c:	28 f0       	brcs	.+10     	; 0x348 <DIO_SetPortDirection+0x40>
 33e:	82 30       	cpi	r24, 0x02	; 2
 340:	39 f0       	breq	.+14     	; 0x350 <DIO_SetPortDirection+0x48>
 342:	83 30       	cpi	r24, 0x03	; 3
 344:	39 f0       	breq	.+14     	; 0x354 <DIO_SetPortDirection+0x4c>
 346:	08 95       	ret
 348:	1a ba       	out	0x1a, r1	; 26
 34a:	08 95       	ret
 34c:	17 ba       	out	0x17, r1	; 23
 34e:	08 95       	ret
 350:	14 ba       	out	0x14, r1	; 20
 352:	08 95       	ret
 354:	11 ba       	out	0x11, r1	; 17
 356:	08 95       	ret

00000358 <DIO_SetPinValue>:
		}
	}
}
void DIO_SetPinValue(DIO_Port_ID Port_ID,DIO_PIN_ID Pin_ID, STD_Value Value)
{
	if(Value==HIGH)
 358:	41 30       	cpi	r20, 0x01	; 1
 35a:	a1 f5       	brne	.+104    	; 0x3c4 <DIO_SetPinValue+0x6c>
	{
		switch(Port_ID)
 35c:	81 30       	cpi	r24, 0x01	; 1
 35e:	89 f0       	breq	.+34     	; 0x382 <DIO_SetPinValue+0x2a>
 360:	28 f0       	brcs	.+10     	; 0x36c <DIO_SetPinValue+0x14>
 362:	82 30       	cpi	r24, 0x02	; 2
 364:	c9 f0       	breq	.+50     	; 0x398 <DIO_SetPinValue+0x40>
 366:	83 30       	cpi	r24, 0x03	; 3
 368:	11 f1       	breq	.+68     	; 0x3ae <DIO_SetPinValue+0x56>
 36a:	08 95       	ret
		{
			case(PORTA): SetBIT(PORTA_Reg,Pin_ID);break;
 36c:	2b b3       	in	r18, 0x1b	; 27
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	02 c0       	rjmp	.+4      	; 0x378 <DIO_SetPinValue+0x20>
 374:	88 0f       	add	r24, r24
 376:	99 1f       	adc	r25, r25
 378:	6a 95       	dec	r22
 37a:	e2 f7       	brpl	.-8      	; 0x374 <DIO_SetPinValue+0x1c>
 37c:	82 2b       	or	r24, r18
 37e:	8b bb       	out	0x1b, r24	; 27
 380:	08 95       	ret
			case(PORTB): SetBIT(PORTB_Reg,Pin_ID);break;
 382:	28 b3       	in	r18, 0x18	; 24
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	02 c0       	rjmp	.+4      	; 0x38e <DIO_SetPinValue+0x36>
 38a:	88 0f       	add	r24, r24
 38c:	99 1f       	adc	r25, r25
 38e:	6a 95       	dec	r22
 390:	e2 f7       	brpl	.-8      	; 0x38a <DIO_SetPinValue+0x32>
 392:	82 2b       	or	r24, r18
 394:	88 bb       	out	0x18, r24	; 24
 396:	08 95       	ret
			case(PORTC): SetBIT(PORTC_Reg,Pin_ID);break;
 398:	25 b3       	in	r18, 0x15	; 21
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <DIO_SetPinValue+0x4c>
 3a0:	88 0f       	add	r24, r24
 3a2:	99 1f       	adc	r25, r25
 3a4:	6a 95       	dec	r22
 3a6:	e2 f7       	brpl	.-8      	; 0x3a0 <DIO_SetPinValue+0x48>
 3a8:	82 2b       	or	r24, r18
 3aa:	85 bb       	out	0x15, r24	; 21
 3ac:	08 95       	ret
			case(PORTD): SetBIT(PORTD_Reg,Pin_ID);break;
 3ae:	22 b3       	in	r18, 0x12	; 18
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <DIO_SetPinValue+0x62>
 3b6:	88 0f       	add	r24, r24
 3b8:	99 1f       	adc	r25, r25
 3ba:	6a 95       	dec	r22
 3bc:	e2 f7       	brpl	.-8      	; 0x3b6 <DIO_SetPinValue+0x5e>
 3be:	82 2b       	or	r24, r18
 3c0:	82 bb       	out	0x12, r24	; 18
 3c2:	08 95       	ret
			
		}
		
	}
	else if(Value==LOW)
 3c4:	41 11       	cpse	r20, r1
 3c6:	37 c0       	rjmp	.+110    	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
	{
			switch(Port_ID)
 3c8:	81 30       	cpi	r24, 0x01	; 1
 3ca:	91 f0       	breq	.+36     	; 0x3f0 <DIO_SetPinValue+0x98>
 3cc:	28 f0       	brcs	.+10     	; 0x3d8 <DIO_SetPinValue+0x80>
 3ce:	82 30       	cpi	r24, 0x02	; 2
 3d0:	d9 f0       	breq	.+54     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3d2:	83 30       	cpi	r24, 0x03	; 3
 3d4:	29 f1       	breq	.+74     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3d6:	08 95       	ret
			{
				case(PORTA): ClearBIT(PORTA_Reg,Pin_ID);break;
 3d8:	2b b3       	in	r18, 0x1b	; 27
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	02 c0       	rjmp	.+4      	; 0x3e4 <DIO_SetPinValue+0x8c>
 3e0:	88 0f       	add	r24, r24
 3e2:	99 1f       	adc	r25, r25
 3e4:	6a 95       	dec	r22
 3e6:	e2 f7       	brpl	.-8      	; 0x3e0 <DIO_SetPinValue+0x88>
 3e8:	80 95       	com	r24
 3ea:	82 23       	and	r24, r18
 3ec:	8b bb       	out	0x1b, r24	; 27
 3ee:	08 95       	ret
				case(PORTB): ClearBIT(PORTB_Reg,Pin_ID);break;
 3f0:	28 b3       	in	r18, 0x18	; 24
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <DIO_SetPinValue+0xa4>
 3f8:	88 0f       	add	r24, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	6a 95       	dec	r22
 3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <DIO_SetPinValue+0xa0>
 400:	80 95       	com	r24
 402:	82 23       	and	r24, r18
 404:	88 bb       	out	0x18, r24	; 24
 406:	08 95       	ret
				case(PORTC): ClearBIT(PORTC_Reg,Pin_ID);break;
 408:	25 b3       	in	r18, 0x15	; 21
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	02 c0       	rjmp	.+4      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 410:	88 0f       	add	r24, r24
 412:	99 1f       	adc	r25, r25
 414:	6a 95       	dec	r22
 416:	e2 f7       	brpl	.-8      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 418:	80 95       	com	r24
 41a:	82 23       	and	r24, r18
 41c:	85 bb       	out	0x15, r24	; 21
 41e:	08 95       	ret
				case(PORTD): ClearBIT(PORTD_Reg,Pin_ID);break;
 420:	22 b3       	in	r18, 0x12	; 18
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	02 c0       	rjmp	.+4      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 428:	88 0f       	add	r24, r24
 42a:	99 1f       	adc	r25, r25
 42c:	6a 95       	dec	r22
 42e:	e2 f7       	brpl	.-8      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 430:	80 95       	com	r24
 432:	82 23       	and	r24, r18
 434:	82 bb       	out	0x12, r24	; 18
 436:	08 95       	ret

00000438 <_exit>:
 438:	f8 94       	cli

0000043a <__stop_program>:
 43a:	ff cf       	rjmp	.-2      	; 0x43a <__stop_program>
